// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mniak/Alkanoid/domain (interfaces: AccountValidationService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/mniak/Alkanoid/domain"
)

// MockAccountValidationService is a mock of AccountValidationService interface.
type MockAccountValidationService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountValidationServiceMockRecorder
}

// MockAccountValidationServiceMockRecorder is the mock recorder for MockAccountValidationService.
type MockAccountValidationServiceMockRecorder struct {
	mock *MockAccountValidationService
}

// NewMockAccountValidationService creates a new mock instance.
func NewMockAccountValidationService(ctrl *gomock.Controller) *MockAccountValidationService {
	mock := &MockAccountValidationService{ctrl: ctrl}
	mock.recorder = &MockAccountValidationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountValidationService) EXPECT() *MockAccountValidationServiceMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockAccountValidationService) Validate(arg0 domain.Account) domain.ValidationResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(domain.ValidationResult)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockAccountValidationServiceMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockAccountValidationService)(nil).Validate), arg0)
}
