// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mniak/Alkanoid/app (interfaces: Mapper)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	app "github.com/mniak/Alkanoid/app"
	domain "github.com/mniak/Alkanoid/domain"
)

// MockMapper is a mock of Mapper interface.
type MockMapper struct {
	ctrl     *gomock.Controller
	recorder *MockMapperMockRecorder
}

// MockMapperMockRecorder is the mock recorder for MockMapper.
type MockMapperMockRecorder struct {
	mock *MockMapper
}

// NewMockMapper creates a new mock instance.
func NewMockMapper(ctrl *gomock.Controller) *MockMapper {
	mock := &MockMapper{ctrl: ctrl}
	mock.recorder = &MockMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMapper) EXPECT() *MockMapperMockRecorder {
	return m.recorder
}

// AccountFromCreateAccountRequest mocks base method.
func (m *MockMapper) AccountFromCreateAccountRequest(arg0 app.CreateAccountRequest) domain.Account {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccountFromCreateAccountRequest", arg0)
	ret0, _ := ret[0].(domain.Account)
	return ret0
}

// AccountFromCreateAccountRequest indicates an expected call of AccountFromCreateAccountRequest.
func (mr *MockMapperMockRecorder) AccountFromCreateAccountRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountFromCreateAccountRequest", reflect.TypeOf((*MockMapper)(nil).AccountFromCreateAccountRequest), arg0)
}

// GetAccountResponseFromAccount mocks base method.
func (m *MockMapper) GetAccountResponseFromAccount(arg0 domain.Account) app.GetAccountResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountResponseFromAccount", arg0)
	ret0, _ := ret[0].(app.GetAccountResponse)
	return ret0
}

// GetAccountResponseFromAccount indicates an expected call of GetAccountResponseFromAccount.
func (mr *MockMapperMockRecorder) GetAccountResponseFromAccount(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountResponseFromAccount", reflect.TypeOf((*MockMapper)(nil).GetAccountResponseFromAccount), arg0)
}

// TransactionFromCreateTransactionRequest mocks base method.
func (m *MockMapper) TransactionFromCreateTransactionRequest(arg0 app.CreateTransactionRequest) domain.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionFromCreateTransactionRequest", arg0)
	ret0, _ := ret[0].(domain.Transaction)
	return ret0
}

// TransactionFromCreateTransactionRequest indicates an expected call of TransactionFromCreateTransactionRequest.
func (mr *MockMapperMockRecorder) TransactionFromCreateTransactionRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionFromCreateTransactionRequest", reflect.TypeOf((*MockMapper)(nil).TransactionFromCreateTransactionRequest), arg0)
}
